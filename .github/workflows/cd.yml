name: CD

on:
  push:
    branch:
      - main
      - feature/new-builds

jobs:
  build-docker:
    name: 🔨 Build Docker
    strategy:
      matrix:
        include:
          - 
            adapter_name: postgres
            dbt_version: 1.4.5
            elementary_version: 0.7.7
          - 
            adapter_name: snowflake
            dbt_version: 1.4.2
            elementary_version: 0.7.7
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ checkout
        uses: actions/checkout@v3

      - name: 🐳 Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: 🏷️ Generate tag
        id: tag
        run: "\
          echo \"TAG=\
          ghcr.io/techonomydev/dbt-runner-serverless:\
          adapter-${{ matrix.adapter_name }}\
          -dbt${{ matrix.dbt_version }}\
          -elementary${{ matrix.elementary_version }}\
          \" >> $GITHUB_ENV"

      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ⬇️ Setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: 🔨 Build the docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,
          load: true
          build-args: |
            DBT_PACKAGE=dbt-${{ matrix.adapter_name }}==${{ matrix.dbt_version }}
            ELEMENTARY_PACKAGE=elementary-data[${{ matrix.adapter_name }}]==${{ matrix.elementary_version }}
          tags: ${{ env.TAG }}

      - name: 🧪 Test the docker image
        # Check if dbt is available from the docker
        run: |
          docker run \
          --entrypoint dbt \
          ${{ env.TAG }}
          --version

      - name: 🚀 Deploy the docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,
          file: ./docker/Dockerfile
          push: true
          tags: ${{ env.TAG }}